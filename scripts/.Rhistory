as.character(row.names(item_descript))
item_descript$item_number <- foo
out1 <- out %>%
dplyr::filter(Item.Total > 0.3)
dim(out1)
out1
good_items <- out1$Variable
good_items
glimpse(complete_data)
complete_data_2 <- complete_data[, (names(complete_data) %in% good_items)]
item_descript <- describe(complete_data_2)
item_descript
item_descript <- as.data.frame(describe(complete_data_2))
item_descript
names(item_descript)
row.names(item_descript)
foo <- row.names(item_descript)
item_descript$item_number <- foo
item_descript
item_descript$item_number <- row.names(item_descript)
complete_data_3 <- complete_data_2[abs(complete_data_2$skew) < 1.1 & abs(kurtosis < 1.1), ]
abs(complete_data_2$skew)
complete_data_2$skew
out <- item.total(complete_data)
out1 <- out %>%
dplyr::filter(Item.Total > 0.3)
dim(out1)
good_items <- out1$Variable
complete_data_2 <- complete_data[, (names(complete_data) %in% good_items)]
complete_data_2
item_descript <- as.data.frame(describe(complete_data_2))
item_descript$item_number <- row.names(item_descript)
item_descript
item_descript_2 <- item_descript[abs(item_descript$skew) < 1.1 & abs(item_descript$kurtosis < 1.1), ]
item_descript_2
item_descript_2 <- item_descript[abs(item_descript$skew) < 1.1 & abs(item_descript$kurtosis) < 1.1, ]
item_descript_2
item_descript_2 <- item_descript[abs(item_descript$skew) < 1.2 & abs(item_descript$kurtosis) < 1.2, ]
good_items <- item_descript_2$item_number
good_items
complete_data_3 <- complete_data2[, (names(complete_data2) %in% good_items)]
out <- item.total(complete_data)
out1 <- out %>%
dplyr::filter(Item.Total > 0.3)
dim(out1)
good_items <- out1$Variable
complete_data_2 <- complete_data[, (names(complete_data) %in% good_items)]
out <- item.total(complete_data)
out1 <- out %>%
dplyr::filter(Item.Total > 0.3)
dim(out1)
good_items <- out1$Variable
good_items
complete_data_2 <- complete_data[, (names(complete_data) %in% good_items)]
item_descript <- as.data.frame(describe(complete_data_2))
item_descript$item_number <- row.names(item_descript)
item_descript_2 <- item_descript[abs(item_descript$skew) < 1.2 & abs(item_descript$kurtosis) < 1.2, ]
good_items <- item_descript_2$item_number
complete_data_3 <- complete_data2[, (names(complete_data2) %in% good_items)]
complete_data_3 <- complete_data_2[, (names(complete_data_2) %in% good_items)]
outlier(complete_data_3[, 1:10])
error.bars(complete_data_3)
r <- round(lowerCor(complete_data_3), 2)
corPlot(r)
fa.parallel(complete_data_3)
vss(complete_data_3)
R <- cor(complete_data_3)
R
fa_out <- principal(R, nfactors = 8, n.obs = 324, rotate = "promax")
fa_out
print(fa_out$loadings, cutoff = 0.4)
library("tidyverse")
library("readxl")
library("mice")
library("VIM")
library("paran")
library("psych")
library("lavaan")
library("polycor") # for hetcor()
library("multilevel")
library("here")
options(max.print=1000000)
# read data
fai_s <- read_xlsx(here("data", "FAI_S_27_11_19.xlsx"), col_names = TRUE)
# glimpse(fai_s)
# correct wrong encoding!
# fai_s$`FAI-S 162` <- as.numeric(fai_s$`FAI-S 162`)
#-------------------------select items-------------------------
#+ chunk_select_items, cache=TRUE, warning=FALSE
items <- fai_s[, 51:247]
hist(rowSums(items, na.rm = TRUE))
#-------------------------multiple imputation-------------------------
#+ chunk_mi, cache=TRUE, warning=FALSE
# Preliminary data analysis revealed that missing data were distributed randomly across
# items and participants. Given that total missing data were less than 5% for each variable,
# data were replaced using ...
item_names  <- paste("i", 1:ncol(items), sep="")
colnames(items) <- item_names
if (0) {
md.pattern(items)
mice_plot <- aggr(
items,
col = c("navyblue", "yellow"),
numbers = TRUE,
sortVars = TRUE,
labels = names(items),
cex.axis = 0.7,
gap = 3,
ylab = c("Missing data", "Pattern")
)
}
imputed_data <- mice(items, m = 1, maxit = 1, method = 'pmm', seed = 123)
complete_data <- complete(imputed_data, 1)
dim(complete_data)
# All items, with the exception of two items ..., were deemed normally distributed on the basis
# of the absolute skew and kurtosis values being within the acceptable range of 2.00 and 7.00,
# respectively (Curran, West, & Finch, 1996).
#-------------------------parallel analysis-------------------------
#+ chunk_parallel_analysis, cache=TRUE, warning=FALSE
# paran_out <- paran(complete_data, iterations = 5000)
#
#
# paran(complete_data, iterations = 5000, centile = 0, quietly = FALSE,
#       status = TRUE, all = TRUE, cfa = TRUE, graph = TRUE, color = TRUE,
#       col = c("black", "red", "blue"), lty = c(1, 2, 3), lwd = 1, legend = TRUE,
#       file = "", seed = 0)
# Adjusted eigenvalues > 0 indicate dimensions to retain.
# (13 factors    retained)
# Item analysis  ----------------------------------------------------------
out <- item.total(complete_data)
out1 <- out %>%
dplyr::filter(Item.Total > 0.3)
dim(out1)
good_items <- out1$Variable
complete_data_2 <- complete_data[, (names(complete_data) %in% good_items)]
# For normal distribution, skewness and kurtosis = 0
# car::qqPlot(complete_data$i2)
# plot(density(complete_data$i3))
# hist(complete_data$i1)
# Select only items with good skewness and kurtosis
item_descript <- as.data.frame(describe(complete_data_2))
item_descript$item_number <- row.names(item_descript)
item_descript_2 <- item_descript[abs(item_descript$skew) < 1.2 & abs(item_descript$kurtosis) < 1.2, ]
good_items <- item_descript_2$item_number
complete_data_3 <- complete_data_2[, (names(complete_data_2) %in% good_items)]
# pairs.panels(complete_data_2[, 1:10])
# outlier(complete_data_3[, 1:10])
# error.bars(complete_data_3)
r <- round(lowerCor(complete_data_3), 2)
# corPlot(r)
# corr.test(complete_data_2[, 1:10])
fa.parallel(complete_data_3)
# Exploratory FA ----------------------------------------------------------
R <- cor(complete_data_3)
print(R, digits = 2)
fa_out <- principal(R, nfactors = 8, n.obs = 324, rotate = "promax")
fa_out
print(fa_out$loadings, cutoff = 0.4)
# One factor model - CURA FORMALE - RC1 --------------------------------------------------------
cura_formale <- c("i143", "i28", "i87", "i176", "i114")
new_data <- complete_data_2[, (names(complete_data_2) %in% cura_formale)]
# model definition
onef_model <-  '
F1 =~ NA*i143 + i28 + i87 + i176 + i114
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = cura_formale)
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
cura_formale <- c("i143", "i28", "i87", "i176", "i114")
new_data <- complete_data_2[, (names(complete_data_2) %in% cura_formale)]
# model definition
onef_model <-  '
F1 =~ NA*i143 + i28 + i87 + i176 + i114
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = cura_formale)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - FATTORI INTRAPSICHICI/AUTOSTIMA - RC3 --------------------------------------------------------
autostima <- c("i122", "i64", "i191", "i111")
new_data <- complete_data_2[, (names(complete_data_2) %in% autostima)]
# model definition
onef_model <-  '
F1 =~ NA*i122 + i64 + i191 + i111
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = autostima)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - FUNZIONAMENTO FAMILIARE - RC5 --------------------------------------------------------
funzionamento_fam <- c("i6", "i36", "i178", "i15")
new_data <- complete_data_2[, (names(complete_data_2) %in% funzionamento_fam)]
# model definition
onef_model <-  '
F1 =~ NA*i6 + i36 + i178 + i15
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = funzionamento_fam)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - SUPPORTO SOCIALE - RC6 --------------------------------------------------------
supporto_sociale <- c("i18", "i130", "i98", "i100", "i186")
new_data <- complete_data_2[, (names(complete_data_2) %in% supporto_sociale)]
# model definition
onef_model <-  '
F1 =~ NA*i18 + i130 + i98 + i100 + i186
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = supporto_sociale)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - CARICO EMOTIVO - RC2 --------------------------------------------------------
carico_emotivo <- c("i116", "i48", "i127", "i83", "i81")
new_data <- complete_data_2[, (names(complete_data_2) %in% carico_emotivo)]
# model definition
onef_model <-  '
F1 =~ NA*i116 + i48 + i127 + i83 + i81
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = carico_emotivo)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - FATTORI INTRAPSICHICI/COGNIZIONE MALATTIA/ACCETTAZIONE E PADRONANZA - RC11 --------------------------------------------------------
accettazione_padronanza <- c("i147", "i34", "i179", "i108")
new_data <- complete_data_2[, (names(complete_data_2) %in% accettazione_padronanza)]
# model definition
onef_model <-  '
F1 =~ NA*i147 + i34 + i179 + i108
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = accettazione_padronanza)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - STILE DI VITA NELLA MALATTIA - RC4 --------------------------------------------------------
stile_vita <- c("i164", "i165", "i126", "i40")
new_data <- complete_data_2[, (names(complete_data_2) %in% stile_vita)]
# model definition
onef_model <-  '
F1 =~ NA*i164 + i165 + i126 + i40
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = stile_vita)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - CONTENIMENTO EMOTIVO GENITORIALE - RC10 --------------------------------------------------------
contenimento_emotivo <- c("i188", "i167", "i22", "i85", "i63", "i47")
new_data <- complete_data_2[, (names(complete_data_2) %in% contenimento_emotivo)]
# model definition
onef_model <-  '
F1 =~ NA*i188 + i167 + i22 + i85 + i63 + i47
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = contenimento_emotivo)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - IPERPROTEZIONE - RC8 --------------------------------------------------------
iperprotezione <- c("i9", "i189", "i137", "i101", "i31")
new_data <- complete_data_2[, (names(complete_data_2) %in% iperprotezione)]
# model definition
onef_model <-  '
F1 =~ NA*i9 + i189 + i137 + i101 + i31
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = iperprotezione)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - FATTORI INTRAPSICHICI/COGNIZIONE DI MALATTIA/PERCEZIONE BENEFICI - RC7 --------------------------------------------------------
percezione_benefici <- c("i41", "i4", "i139")
new_data <- complete_data_2[, (names(complete_data_2) %in% percezione_benefici)]
# model definition
onef_model <-  '
F1 =~ NA*i41 + i4 + i139
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = percezione_benefici)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
cura_formale <- c("i143", "i28", "i87", "i176", "i114")
new_data <- complete_data_2[, (names(complete_data_2) %in% cura_formale)]
# model definition
onef_model <-  '
F1 =~ NA*i143 + i28 + i87 + i176 + i114
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = cura_formale)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - FATTORI INTRAPSICHICI/AUTOSTIMA - RC3 --------------------------------------------------------
autostima <- c("i122", "i64", "i191", "i111")
new_data <- complete_data_2[, (names(complete_data_2) %in% autostima)]
# model definition
onef_model <-  '
F1 =~ NA*i122 + i64 + i191 + i111
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = autostima)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - FUNZIONAMENTO FAMILIARE - RC5 --------------------------------------------------------
funzionamento_fam <- c("i6", "i36", "i178", "i15")
new_data <- complete_data_2[, (names(complete_data_2) %in% funzionamento_fam)]
# model definition
onef_model <-  '
F1 =~ NA*i6 + i36 + i178 + i15
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = funzionamento_fam)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
# One factor model - SUPPORTO SOCIALE - RC6 --------------------------------------------------------
supporto_sociale <- c("i18", "i130", "i98", "i100", "i186")
new_data <- complete_data_2[, (names(complete_data_2) %in% supporto_sociale)]
# model definition
onef_model <-  '
F1 =~ NA*i18 + i130 + i98 + i100 + i186
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = supporto_sociale)
# look at the results
summary(fit1, fit.measures = TRUE, standardized = TRUE, rsquare = TRUE)
carico_emotivo <- c("i116", "i48", "i127", "i83", "i81")
new_data <- complete_data_2[, (names(complete_data_2) %in% carico_emotivo)]
# model definition
onef_model <-  '
F1 =~ NA*i116 + i48 + i127 + i83 + i81
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = carico_emotivo)
accettazione_padronanza <- c("i147", "i34", "i179", "i108")
new_data <- complete_data_2[, (names(complete_data_2) %in% accettazione_padronanza)]
# model definition
onef_model <-  '
F1 =~ NA*i147 + i34 + i179 + i108
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = accettazione_padronanza)
accettazione_padronanza <- c("i147", "i34", "i179")   # i108
new_data <- complete_data_2[, (names(complete_data_2) %in% accettazione_padronanza)]
# model definition
onef_model <-  '
F1 =~ NA*i147 + i34 + i179 + i108
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = accettazione_padronanza)
cura_formale <- c("i143", "i28", "i87", "i176", "i114")
new_data <- complete_data_3[, (names(complete_data_3) %in% cura_formale)]
# model definition
onef_model <-  '
F1 =~ NA*i143 + i28 + i87 + i176 + i114
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = cura_formale)
autostima <- c("i122", "i64", "i191", "i111")
new_data <- complete_data_3[, (names(complete_data_3) %in% autostima)]
# model definition
onef_model <-  '
F1 =~ NA*i122 + i64 + i191 + i111
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = autostima)
funzionamento_fam <- c("i6", "i36", "i178", "i15")
new_data <- complete_data_3[, (names(complete_data_3) %in% funzionamento_fam)]
# model definition
onef_model <-  '
F1 =~ NA*i6 + i36 + i178 + i15
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = funzionamento_fam)
supporto_sociale <- c("i18", "i130", "i98", "i100", "i186")
new_data <- complete_data_3[, (names(complete_data_3) %in% supporto_sociale)]
# model definition
onef_model <-  '
F1 =~ NA*i18 + i130 + i98 + i100 + i186
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = supporto_sociale)
carico_emotivo <- c("i116", "i48", "i127", "i83", "i81")
new_data <- complete_data_3[, (names(complete_data_3) %in% carico_emotivo)]
# model definition
onef_model <-  '
F1 =~ NA*i116 + i48 + i127 + i83 + i81
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = carico_emotivo)
accettazione_padronanza <- c("i147", "i34", "i179")   # i108
new_data <- complete_data_3[, (names(complete_data_3) %in% accettazione_padronanza)]
# model definition
onef_model <-  '
F1 =~ NA*i147 + i34 + i179 + i108
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = accettazione_padronanza)
accettazione_padronanza <- c("i147", "i34", "i179")
accettazione_padronanza
new_data <- complete_data_3[, (names(complete_data_3) %in% accettazione_padronanza)]
head(new_data)
# model definition
onef_model <-  '
F1 =~ NA*i147 + i34 + i179
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = accettazione_padronanza)
stile_vita <- c("i164", "i165", "i126", "i40")
new_data <- complete_data_3[, (names(complete_data_3) %in% stile_vita)]
# model definition
onef_model <-  '
F1 =~ NA*i164 + i165 + i126 + i40
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = stile_vita)
contenimento_emotivo <- c("i188", "i167", "i22", "i85", "i63", "i47")
new_data <- complete_data_3[, (names(complete_data_3) %in% contenimento_emotivo)]
# model definition
onef_model <-  '
F1 =~ NA*i188 + i167 + i22 + i85 + i63 + i47
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = contenimento_emotivo)
iperprotezione <- c("i9", "i189", "i137", "i101", "i31")
new_data <- complete_data_3[, (names(complete_data_3) %in% iperprotezione)]
# model definition
onef_model <-  '
F1 =~ NA*i9 + i189 + i137 + i101 + i31
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = iperprotezione)
iperprotezione <- c("i9", "i189", "i137", "i101", "i31")
new_data <- complete_data_3[, (names(complete_data_3) %in% iperprotezione)]
# model definition
onef_model <-  '
F1 =~ NA*i9 + i189 + i137 + i101 + i31
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = iperprotezione)
head(new_data)
contenimento_emotivo <- c("i188", "i167", "i22", "i85", "i63", "i47")
new_data <- complete_data_3[, (names(complete_data_3) %in% contenimento_emotivo)]
head(new_data)
iperprotezione <- c("i9", "i189", "i137", "i101", "i31")
new_data <- complete_data_3[, (names(complete_data_3) %in% iperprotezione)]
head(new_data)
names(complete_data_3)
percezione_benefici <- c("i41", "i4", "i139")
new_data <- complete_data_3[, (names(complete_data_3) %in% percezione_benefici)]
# model definition
onef_model <-  '
F1 =~ NA*i41 + i4 + i139
# variances
F1 ~~ 1*F1
'
# fit the model
fit1 <- lavaan:::cfa(onef_model, data = new_data,  ordered = percezione_benefici)
print(fa_out$loadings, cutoff = 0.4)
here("data", "FAI_S_27_11_19.xlsx")
